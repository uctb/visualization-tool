"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DocCard;

var _react = _interopRequireDefault(require("react"));

var _Link = _interopRequireDefault(require("@docusaurus/Link"));

var _themeCommon = require("@docusaurus/theme-common");

var _clsx = _interopRequireDefault(require("clsx"));

var _stylesModule = _interopRequireDefault(require("./styles.module.css"));

var _isInternalUrl = _interopRequireDefault(require("@docusaurus/isInternalUrl"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function CardContainer({
  href,
  children
}) {
  const className = (0, _clsx.default)('card margin-bottom--lg padding--lg', _stylesModule.default.cardContainer, href && _stylesModule.default.cardContainerLink);
  return href ? <_Link.default href={href} className={className}>
      {children}
    </_Link.default> : <div className={className}>{children}</div>;
}

function CardLayout({
  href,
  icon,
  title,
  description
}) {
  return <CardContainer href={href}>
      <h2 className={(0, _clsx.default)('text--truncate', _stylesModule.default.cardTitle)} title={title}>
        {icon} {title}
      </h2>
      <div className={(0, _clsx.default)('text--truncate', _stylesModule.default.cardDescription)} title={description}>
        {description}
      </div>
    </CardContainer>;
}

function CardCategory({
  item
}) {
  const href = (0, _themeCommon.findFirstCategoryLink)(item);
  return <CardLayout href={href} icon="üóÉÔ∏è" title={item.label} description={`${item.items.length} items`} />;
}

function CardLink({
  item
}) {
  var _item$docId;

  const icon = (0, _isInternalUrl.default)(item.href) ? 'üìÑÔ∏è' : 'üîó';
  const doc = (0, _themeCommon.useDocById)((_item$docId = item.docId) !== null && _item$docId !== void 0 ? _item$docId : undefined);
  return <CardLayout href={item.href} icon={icon} title={item.label} description={doc === null || doc === void 0 ? void 0 : doc.description} />;
}

function DocCard({
  item
}) {
  switch (item.type) {
    case 'link':
      return <CardLink item={item} />;

    case 'category':
      return <CardCategory item={item} />;

    default:
      throw new Error(`unknown item type ${JSON.stringify(item)}`);
  }
}