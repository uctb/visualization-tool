/**
*  @license
* Copyright 2022, JsData. All rights reserved.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.

* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* ==========================================================================
*/
import { getBackend } from '../tf-singleton';
import { convertToTensor1D } from '../utils';
export function negMeanAbsoluteError(X, y) {
    let tf = getBackend();
    return tf.tidy(() => {
        y = convertToTensor1D(y);
        const yPred = this.predict(X);
        return tf.metrics.meanAbsoluteError(y, yPred).neg();
    });
}
export function negMeanSquaredError(X, y) {
    let tf = getBackend();
    return tf.tidy(() => {
        y = convertToTensor1D(y);
        const yPred = this.predict(X);
        return tf.metrics.meanSquaredError(y, yPred).neg();
    });
}
export function accuracy(X, y) {
    let tf = getBackend();
    return tf.tidy(() => {
        y = convertToTensor1D(y);
        const yPred = this.predict(X);
        return tf.equal(y, yPred).sum().div(y.shape[0]);
    });
}
