/**
*  @license
* Copyright 2021, JsData. All rights reserved.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.

* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* ==========================================================================
*/
import { Neighborhood, NeighborhoodParams } from './Neighborhood';
import { Metric } from './Metric';
import { Tensor2D } from '../types';
/**
 * A {@link Neighborhood} implementation that uses a brute force approach
 * to nearest neighbor search. During a {@link BruteNeighborhood#kNearest}
 * query, the distance between every entry and the query point is computed.
 */
export declare class BruteNeighborhood implements Neighborhood {
    _metric: Metric;
    _entries: Tensor2D;
    tf: any;
    constructor({ metric, entries }: NeighborhoodParams);
    kNearest(k: number, queryPoints: Tensor2D): any;
}
