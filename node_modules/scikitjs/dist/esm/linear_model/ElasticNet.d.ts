/**
*  @license
* Copyright 2021, JsData. All rights reserved.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.

* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* ==========================================================================
*/
import { SGDRegressor } from './SgdRegressor';
export interface ElasticNetParams {
    /**Constant that multiplies the penalty terms. **default = .01**  */
    alpha?: number;
    /**The ElasticNet mixing parameter. **default = .5** */
    l1Ratio?: number;
    /** Whether or not the intercept should be estimator not. **default = true** */
    fitIntercept?: boolean;
}
/**
 * Linear regression with combined L1 and L2 priors as regularizer.
 */
export declare class ElasticNet extends SGDRegressor {
    constructor({ alpha, l1Ratio, fitIntercept }?: ElasticNetParams);
}
