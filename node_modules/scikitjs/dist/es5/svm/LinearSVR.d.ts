import { SGDRegressor } from '../linear_model/SgdRegressor';
export interface LinearSVRParams {
    /**
     * Epsilon parameter in the epsilon-insensitive loss function.
     * Note that the value of this parameter depends on the scale
     * of the target variable y. If unsure, set epsilon=0.
     */
    epsilon?: number;
    /** Inverse of the regularization strength. **default = 1** */
    C?: number;
    /** Whether or not the intercept should be estimator not. **default = true** */
    fitIntercept?: boolean;
}
/** Builds a linear classification model with associated penalty and regularization
 *
 * @example
 * ```js
 * let X = [
      [1, -1],
      [2, 0],
      [2, 1],
      [2, -1],
      [3, 2],
      [0, 4],
      [1, 3],
      [1, 4],
      [1, 5],
      [2, 3],
    ]
    let y = [ 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]

    let svc = new LinearSVC()
    await svc.fit(X, y)
 * ```
*/
export declare class LinearSVR extends SGDRegressor {
    constructor({ epsilon, C, fitIntercept }?: LinearSVRParams);
}
