/**
*  @license
* Copyright 2021, JsData. All rights reserved.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.

* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* ==========================================================================
*/
import { DataFrameInterface, Scikit1D, Scikit2D, ScikitLike1D, ScikitLike2D, ScikitVecOrMatrix, SeriesInterface, Tensor, TensorLike, DataType } from './types';
export declare function isString(value: unknown): value is string;
export declare function isBoolean(value: unknown): boolean;
export declare function isNumber(value: unknown): boolean;
export declare function assert(expr: boolean, msg: string): void;
export declare function inferShape(val: TensorLike, dtype?: DataType): number[];
export declare function deepAssertShapeConsistency(val: TensorLike, shape: number[], indices: number[]): void;
export declare function inferDtype(values: TensorLike): DataType | null;
export declare function isTypedArray(a: unknown): a is Float32Array | Int32Array | Uint8Array;
export declare function isScikitLike1D(arr: any): arr is ScikitLike1D;
export declare function isScikitLike2D(arr: any): arr is ScikitLike2D;
export declare function isTensor(arr: any): arr is Tensor;
export declare function isSeriesInterface(arr: any): arr is SeriesInterface;
export declare function isDataFrameInterface(arr: any): arr is DataFrameInterface;
export declare function isScikit1D(arr: unknown): arr is Scikit1D;
export declare function isScikit2D(arr: unknown): arr is Scikit2D;
export declare function isScikitVecOrMatrix(arr: unknown): arr is ScikitVecOrMatrix;
