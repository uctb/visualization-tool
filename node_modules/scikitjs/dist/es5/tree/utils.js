export function validateX(X) {
    if (X.length === 0) {
        throw new Error("X can not be empty, but it has a length of 0. It is ".concat(X, "."));
    }
    for (var i = 0; i < X.length; i++) {
        var curRow = X[i];
        if (curRow.length === 0) {
            throw new Error("Rows in X can not be empty, but row ".concat(i, " in X is ").concat(curRow, "."));
        }
        for (var j = 0; j < curRow.length; j++) {
            if (typeof curRow[j] !== 'number' || !Number.isFinite(curRow[j])) {
                throw new Error("X must contain finite non-NaN numbers, but the element at X[".concat(i, "][").concat(j, "] is ").concat(curRow[j]));
            }
        }
    }
}
export function validateY(y) {
    if (y.length === 0) {
        throw new Error("y can not be empty, but it has a length of 0. It is ".concat(y, "."));
    }
    for (var i = 0; i < y.length; i++) {
        var curVal = y[i];
        if (!Number.isSafeInteger(curVal)) {
            throw new Error("Some y values are not an integer. Found ".concat(curVal, " but must be an integer only"));
        }
    }
}
