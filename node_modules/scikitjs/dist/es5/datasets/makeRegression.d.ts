import { Tensor1D, Tensor2D } from '../types';
interface MakeRegressionInput {
    nSamples?: number;
    nFeatures?: number;
    nInformative?: number;
    nTargets?: number;
    bias?: number;
    effectiveRank?: number | null;
    tailStrength?: number;
    noise?: number;
    shuffle?: boolean;
    coef?: boolean;
}
export declare const makeRegression: ({ nSamples, nFeatures, nInformative, nTargets, noise, bias, effectiveRank, tailStrength, shuffle, coef }?: MakeRegressionInput) => [Tensor2D, Tensor1D | Tensor2D] | [Tensor2D, Tensor1D, Tensor1D] | [Tensor2D, Tensor2D, Tensor2D];
interface MakeLowRankMatrixInput {
    nSamples?: number;
    nFeatures?: number;
    effectiveRank?: number;
    tailStrength?: number;
}
export declare const makeLowRankMatrix: ({ nSamples, nFeatures, effectiveRank, tailStrength }?: MakeLowRankMatrixInput) => Tensor2D;
export {};
