/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
// Importing local_storage and indexed_db is necessary for the routers to be
// registered.
import './indexed_db';
import './local_storage';
import { browserFiles } from './browser_files';
import { browserHTTPRequest, http, isHTTPScheme } from './http';
import { concatenateArrayBuffers, decodeWeights, encodeWeights, getModelArtifactsForJSON, getModelArtifactsForJSONSync, getModelArtifactsInfoForJSON, getWeightSpecs } from './io_utils';
import { fromMemory, fromMemorySync, withSaveHandler, withSaveHandlerSync } from './passthrough';
import { getLoadHandlers, getSaveHandlers, registerLoadRouter, registerSaveRouter } from './router_registry';
import { loadWeights, weightsLoaderFactory } from './weights_loader';
export { copyModel, listModels, moveModel, removeModel } from './model_management';
export { browserFiles, browserHTTPRequest, concatenateArrayBuffers, decodeWeights, encodeWeights, fromMemory, fromMemorySync, getLoadHandlers, getModelArtifactsForJSON, getModelArtifactsForJSONSync, getModelArtifactsInfoForJSON, getSaveHandlers, getWeightSpecs, http, isHTTPScheme, loadWeights, registerLoadRouter, registerSaveRouter, weightsLoaderFactory, withSaveHandler, withSaveHandlerSync, };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL2lvL2lvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILDRFQUE0RTtBQUM1RSxjQUFjO0FBQ2QsT0FBTyxjQUFjLENBQUM7QUFDdEIsT0FBTyxpQkFBaUIsQ0FBQztBQUV6QixPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDN0MsT0FBTyxFQUFDLGtCQUFrQixFQUFFLElBQUksRUFBRSxZQUFZLEVBQUMsTUFBTSxRQUFRLENBQUM7QUFDOUQsT0FBTyxFQUFDLHVCQUF1QixFQUFFLGFBQWEsRUFBRSxhQUFhLEVBQUUsd0JBQXdCLEVBQUUsNEJBQTRCLEVBQUUsNEJBQTRCLEVBQUUsY0FBYyxFQUFDLE1BQU0sWUFBWSxDQUFDO0FBQ3ZMLE9BQU8sRUFBQyxVQUFVLEVBQUUsY0FBYyxFQUFFLGVBQWUsRUFBRSxtQkFBbUIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMvRixPQUFPLEVBQUMsZUFBZSxFQUFFLGVBQWUsRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBRTNHLE9BQU8sRUFBQyxXQUFXLEVBQUUsb0JBQW9CLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUVuRSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFDakYsT0FBTyxFQUNMLFlBQVksRUFDWixrQkFBa0IsRUFDbEIsdUJBQXVCLEVBQ3ZCLGFBQWEsRUFDYixhQUFhLEVBQ2IsVUFBVSxFQUNWLGNBQWMsRUFDZCxlQUFlLEVBQ2Ysd0JBQXdCLEVBQ3hCLDRCQUE0QixFQUM1Qiw0QkFBNEIsRUFDNUIsZUFBZSxFQUNmLGNBQWMsRUFDZCxJQUFJLEVBR0osWUFBWSxFQUdaLFdBQVcsRUFNWCxrQkFBa0IsRUFDbEIsa0JBQWtCLEVBT2xCLG9CQUFvQixFQUdwQixlQUFlLEVBQ2YsbUJBQW1CLEdBQ3BCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbi8vIEltcG9ydGluZyBsb2NhbF9zdG9yYWdlIGFuZCBpbmRleGVkX2RiIGlzIG5lY2Vzc2FyeSBmb3IgdGhlIHJvdXRlcnMgdG8gYmVcbi8vIHJlZ2lzdGVyZWQuXG5pbXBvcnQgJy4vaW5kZXhlZF9kYic7XG5pbXBvcnQgJy4vbG9jYWxfc3RvcmFnZSc7XG5cbmltcG9ydCB7YnJvd3NlckZpbGVzfSBmcm9tICcuL2Jyb3dzZXJfZmlsZXMnO1xuaW1wb3J0IHticm93c2VySFRUUFJlcXVlc3QsIGh0dHAsIGlzSFRUUFNjaGVtZX0gZnJvbSAnLi9odHRwJztcbmltcG9ydCB7Y29uY2F0ZW5hdGVBcnJheUJ1ZmZlcnMsIGRlY29kZVdlaWdodHMsIGVuY29kZVdlaWdodHMsIGdldE1vZGVsQXJ0aWZhY3RzRm9ySlNPTiwgZ2V0TW9kZWxBcnRpZmFjdHNGb3JKU09OU3luYywgZ2V0TW9kZWxBcnRpZmFjdHNJbmZvRm9ySlNPTiwgZ2V0V2VpZ2h0U3BlY3N9IGZyb20gJy4vaW9fdXRpbHMnO1xuaW1wb3J0IHtmcm9tTWVtb3J5LCBmcm9tTWVtb3J5U3luYywgd2l0aFNhdmVIYW5kbGVyLCB3aXRoU2F2ZUhhbmRsZXJTeW5jfSBmcm9tICcuL3Bhc3N0aHJvdWdoJztcbmltcG9ydCB7Z2V0TG9hZEhhbmRsZXJzLCBnZXRTYXZlSGFuZGxlcnMsIHJlZ2lzdGVyTG9hZFJvdXRlciwgcmVnaXN0ZXJTYXZlUm91dGVyfSBmcm9tICcuL3JvdXRlcl9yZWdpc3RyeSc7XG5pbXBvcnQge0lPSGFuZGxlciwgSU9IYW5kbGVyU3luYywgTG9hZEhhbmRsZXIsIExvYWRPcHRpb25zLCBNb2RlbEFydGlmYWN0cywgTW9kZWxBcnRpZmFjdHNJbmZvLCBNb2RlbEpTT04sIE1vZGVsU3RvcmVNYW5hZ2VyLCBPblByb2dyZXNzQ2FsbGJhY2ssIFJlcXVlc3REZXRhaWxzLCBTYXZlQ29uZmlnLCBTYXZlSGFuZGxlciwgU2F2ZVJlc3VsdCwgVHJhaW5pbmdDb25maWcsIFdlaWdodEdyb3VwLCBXZWlnaHRzTWFuaWZlc3RDb25maWcsIFdlaWdodHNNYW5pZmVzdEVudHJ5fSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7bG9hZFdlaWdodHMsIHdlaWdodHNMb2FkZXJGYWN0b3J5fSBmcm9tICcuL3dlaWdodHNfbG9hZGVyJztcblxuZXhwb3J0IHtjb3B5TW9kZWwsIGxpc3RNb2RlbHMsIG1vdmVNb2RlbCwgcmVtb3ZlTW9kZWx9IGZyb20gJy4vbW9kZWxfbWFuYWdlbWVudCc7XG5leHBvcnQge1xuICBicm93c2VyRmlsZXMsXG4gIGJyb3dzZXJIVFRQUmVxdWVzdCxcbiAgY29uY2F0ZW5hdGVBcnJheUJ1ZmZlcnMsXG4gIGRlY29kZVdlaWdodHMsXG4gIGVuY29kZVdlaWdodHMsXG4gIGZyb21NZW1vcnksXG4gIGZyb21NZW1vcnlTeW5jLFxuICBnZXRMb2FkSGFuZGxlcnMsXG4gIGdldE1vZGVsQXJ0aWZhY3RzRm9ySlNPTixcbiAgZ2V0TW9kZWxBcnRpZmFjdHNGb3JKU09OU3luYyxcbiAgZ2V0TW9kZWxBcnRpZmFjdHNJbmZvRm9ySlNPTixcbiAgZ2V0U2F2ZUhhbmRsZXJzLFxuICBnZXRXZWlnaHRTcGVjcyxcbiAgaHR0cCxcbiAgSU9IYW5kbGVyLFxuICBJT0hhbmRsZXJTeW5jLFxuICBpc0hUVFBTY2hlbWUsXG4gIExvYWRIYW5kbGVyLFxuICBMb2FkT3B0aW9ucyxcbiAgbG9hZFdlaWdodHMsXG4gIE1vZGVsQXJ0aWZhY3RzLFxuICBNb2RlbEFydGlmYWN0c0luZm8sXG4gIE1vZGVsSlNPTixcbiAgTW9kZWxTdG9yZU1hbmFnZXIsXG4gIE9uUHJvZ3Jlc3NDYWxsYmFjayxcbiAgcmVnaXN0ZXJMb2FkUm91dGVyLFxuICByZWdpc3RlclNhdmVSb3V0ZXIsXG4gIFJlcXVlc3REZXRhaWxzLFxuICBTYXZlQ29uZmlnLFxuICBTYXZlSGFuZGxlcixcbiAgU2F2ZVJlc3VsdCxcbiAgVHJhaW5pbmdDb25maWcsXG4gIFdlaWdodEdyb3VwLFxuICB3ZWlnaHRzTG9hZGVyRmFjdG9yeSxcbiAgV2VpZ2h0c01hbmlmZXN0Q29uZmlnLFxuICBXZWlnaHRzTWFuaWZlc3RFbnRyeSxcbiAgd2l0aFNhdmVIYW5kbGVyLFxuICB3aXRoU2F2ZUhhbmRsZXJTeW5jLFxufTtcbiJdfQ==